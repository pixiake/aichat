{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,IACzBH,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCAlF,MAAM,EAA+BI,OAAOC,KAAKC,OAAO,c,MCExDC,GAAAA,aAAiBC,IAAI,kBAAkB,WACrCC,QAAQC,IAAI,iBACd,ICJA,MAAM,EAA+BN,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,gC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCIxDC,IAAAA,aAAiBC,IAAI,kBAAkB,YCEnCG,EAAAA,EAAAA,QAAOC,IAAAA,UAAuB,eAAe,SAASC,GAClD,IAAMC,EAAOC,KAAKC,MAAMF,KAClBG,EAAaH,EAAKG,aAClBC,EAAgBJ,EAAKK,UAAU,iBAC/BC,EAAeb,IAAIc,MAAMF,UAAU,gBAEnCG,EAAYf,IAAIc,MAAMF,UAAU,aAClCL,EAAKS,QAAUT,EAAKS,OAAOC,OAASF,GAgBxCT,EAAML,IAAI,WACNiB,IAAAA,UAAiB,CACbC,UAAW,sBACXC,KAAMT,EAAgB,iBAAmB,uBACzCU,QAAS,WAEAV,IACDJ,EAAKe,eAAe,CAChBX,eAAe,IAEnBX,IAAIuB,QAAQ,CACVC,OAAQ,OACRC,IAAKzB,IAAIc,MAAMF,UAAU,UAAY,8BACrCc,KAAM,CACFC,OAAQpB,EAAKU,KACbW,SAAS,KAEb,OAAO,SAAAC,GAELtB,EAAKe,eAAe,CAChBX,cAAAA,GAER,IAEAX,IAAIuB,QAAQ,CACRC,OAAQ,OACRC,IAAKzB,IAAIc,MAAMF,UAAU,UAAY,oCACrCc,KAAM,CACJI,aAAcpB,EAAWO,KACzBc,KAAM,CACJC,YAAa,CACXC,IAAKpB,EACLqB,OAAQ,WAId,OAAO,SAAAL,GACL7B,IAAImC,OAAOC,KAAK,CAAEC,KAAM,SAAWR,EAAMS,QAC7C,IAEV,GACD3B,EAAgB,cAAgB,YAClC,GAGT,GDpEJ,G","sources":["webpack://@pixiake/aichat/webpack/bootstrap","webpack://@pixiake/aichat/webpack/runtime/compat get default export","webpack://@pixiake/aichat/webpack/runtime/define property getters","webpack://@pixiake/aichat/webpack/runtime/hasOwnProperty shorthand","webpack://@pixiake/aichat/external root \"flarum.core.compat['common/app']\"","webpack://@pixiake/aichat/./src/common/index.ts","webpack://@pixiake/aichat/external root \"flarum.core.compat['forum/app']\"","webpack://@pixiake/aichat/external root \"flarum.core.compat['common/extend']\"","webpack://@pixiake/aichat/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@pixiake/aichat/external root \"flarum.core.compat['common/components/Button']\"","webpack://@pixiake/aichat/./src/forum/index.ts","webpack://@pixiake/aichat/./src/forum/addNeedHelpButton.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\napp.initializers.add('pixiake/aichat', () => {\n  console.log('Hello, common!');\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import app from 'flarum/forum/app';\nimport addNeedHelpButton from './addNeedHelpButton';\n// import addRatingButtons from './addRatingButtons';\n\napp.initializers.add('pixiake/aichat', () => {\n  addNeedHelpButton();\n});\n","import { extend } from 'flarum/common/extend';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport Button from 'flarum/common/components/Button';\n\n\nexport default function addNeedHelpButton() {\n    extend(CommentPost.prototype, 'actionItems', function(items) {\n        const post = this.attrs.post;\n        const discussion = post.discussion();\n        const isMarkedWrong = post.attribute('isMarkedWrong');\n        const needHelpTags = app.forum.attribute('needHelpTags');\n        // 检查是否是机器人的回复\n        const botUserId = app.forum.attribute('botUserId');\n        if (post.user() && post.user().id() !== botUserId) {\n            return;\n        }\n\n        // // 检查当前 disscussion 是否包含 needHelp 标签\n        // const needHelpTags = app.forum.attribute('needHelpTags') || [];\n        // const tags = discussion.tags();\n        // const hasNeedHelpTag = tags && tags.some(tag => needHelpTags.includes(tag.id()));\n        // console.log(post)\n         \n        // if (hasNeedHelpTag) {\n        //     post.pushAttributes({\n        //         isMarkedWrong: hasNeedHelpTag\n        //       });\n        // }\n\n        items.add('needHelp',\n            Button.component({\n                className: 'Button Button--link',\n                icon: isMarkedWrong ? 'fas fa-running' : 'fas fa-hands-helping',\n                onclick: () => {\n                    // 更新前端状态\n                    if (!isMarkedWrong) {\n                        post.pushAttributes({\n                            isMarkedWrong: true\n                          });\n                        app.request({\n                          method: 'POST',\n                          url: app.forum.attribute('apiUrl') + '/ai-chat/v1alpha1/mark-post',\n                          body: {\n                              postId: post.id(),\n                              isWrong: true\n                          }\n                        }).catch(error => {\n                            // 回滚前端状态\n                            post.pushAttributes({\n                                isMarkedWrong\n                            });\n                        });\n\n                        app.request({\n                            method: 'POST',\n                            url: app.forum.attribute('apiUrl') + '/ai-chat/v1alpha1/mark-discussion',\n                            body: {\n                              discussionId: discussion.id(),\n                              mark: {\n                                needToLearn: {\n                                  ids: needHelpTags,\n                                  action: \"add\"\n                                }\n                              }\n                            }\n                          }).catch(error => {\n                              app.alerts.show({ type: 'error' }, error.message);\n                          });\n                    }\n                }\n            }, isMarkedWrong ? '热心大佬正在赶来...' : '呼叫热心大佬支援',\n            -9\n        )\n        );\n    });\n}"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","app","add","console","log","extend","CommentPost","items","post","this","attrs","discussion","isMarkedWrong","attribute","needHelpTags","forum","botUserId","user","id","Button","className","icon","onclick","pushAttributes","request","method","url","body","postId","isWrong","error","discussionId","mark","needToLearn","ids","action","alerts","show","type","message"],"sourceRoot":""}